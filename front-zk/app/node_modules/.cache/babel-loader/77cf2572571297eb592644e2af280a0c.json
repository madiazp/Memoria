{"ast":null,"code":"import * as wasm from './index_bg.wasm';\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nlet cachedTextEncoder = new lTextEncoder('utf-8');\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len);\n  const mem = getUint8Memory0();\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory0;\n}\n\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n  if (stack_pointer == 1) throw new Error('out of js stack');\n  heap[--stack_pointer] = obj;\n  return stack_pointer;\n}\n/**\n* @param {any} source\n* @param {any} location\n* @param {Function} resolve_callback\n* @returns {any}\n*/\n\n\nexport function compile(source, location, resolve_callback) {\n  try {\n    var ret = wasm.compile(addHeapObject(source), addHeapObject(location), addBorrowedObject(resolve_callback));\n    return takeObject(ret);\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n/**\n* @param {any} artifacts\n* @param {any} args\n* @returns {any}\n*/\n\nexport function compute_witness(artifacts, args) {\n  var ret = wasm.compute_witness(addHeapObject(artifacts), addHeapObject(args));\n  return takeObject(ret);\n}\n/**\n* @param {any} program\n* @returns {any}\n*/\n\nexport function setup(program) {\n  var ret = wasm.setup(addHeapObject(program));\n  return takeObject(ret);\n}\n/**\n* @param {any} vk\n* @param {any} abi_version\n* @returns {any}\n*/\n\nexport function export_solidity_verifier(vk, abi_version) {\n  var ret = wasm.export_solidity_verifier(addHeapObject(vk), addHeapObject(abi_version));\n  return takeObject(ret);\n}\n/**\n* @param {any} program\n* @param {any} witness\n* @param {any} pk\n* @returns {any}\n*/\n\nexport function generate_proof(program, witness, pk) {\n  var ret = wasm.generate_proof(addHeapObject(program), addHeapObject(witness), addHeapObject(pk));\n  return takeObject(ret);\n}\n/**\n* @param {any} vk\n* @param {any} proof\n* @returns {any}\n*/\n\nexport function verify(vk, proof) {\n  var ret = wasm.verify(addHeapObject(vk), addHeapObject(proof));\n  return takeObject(ret);\n}\n/**\n*/\n\nexport function main_js() {\n  wasm.main_js();\n}\n\nfunction handleError(f) {\n  return function () {\n    try {\n      return f.apply(this, arguments);\n    } catch (e) {\n      wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n  };\n}\n\nexport const __wbindgen_string_new = function (arg0, arg1) {\n  var ret = getStringFromWasm0(arg0, arg1);\n  return addHeapObject(ret);\n};\nexport const __wbindgen_object_drop_ref = function (arg0) {\n  takeObject(arg0);\n};\nexport const __wbindgen_is_null = function (arg0) {\n  var ret = getObject(arg0) === null;\n  return ret;\n};\nexport const __wbindgen_is_undefined = function (arg0) {\n  var ret = getObject(arg0) === undefined;\n  return ret;\n};\nexport const __wbindgen_json_serialize = function (arg0, arg1) {\n  const obj = getObject(arg1);\n  var ret = JSON.stringify(obj === undefined ? null : obj);\n  var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nexport const __wbindgen_json_parse = function (arg0, arg1) {\n  var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n  return addHeapObject(ret);\n};\nexport const __wbg_new_59cb74e423758ede = function () {\n  var ret = new Error();\n  return addHeapObject(ret);\n};\nexport const __wbg_stack_558ba5917b466edd = function (arg0, arg1) {\n  var ret = getObject(arg1).stack;\n  var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nexport const __wbg_error_4bb6c2a97407129a = function (arg0, arg1) {\n  try {\n    console.error(getStringFromWasm0(arg0, arg1));\n  } finally {\n    wasm.__wbindgen_free(arg0, arg1);\n  }\n};\nexport const __wbg_call_646f9f3c6af62d21 = handleError(function (arg0, arg1, arg2, arg3) {\n  var ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));\n  return addHeapObject(ret);\n});\nexport const __wbindgen_string_get = function (arg0, arg1) {\n  const obj = getObject(arg1);\n  var ret = typeof obj === 'string' ? obj : undefined;\n  var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nexport const __wbindgen_throw = function (arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};\nexport const __wbindgen_rethrow = function (arg0) {\n  throw takeObject(arg0);\n};","map":{"version":3,"sources":["/home/matias/Memoria/Demo/front-zk/app/node_modules/zokrates-js/pkg/index_bg.js"],"names":["wasm","lTextDecoder","TextDecoder","module","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","isLikeNone","x","stack_pointer","addBorrowedObject","Error","compile","source","location","resolve_callback","compute_witness","artifacts","args","setup","program","export_solidity_verifier","vk","abi_version","generate_proof","witness","pk","verify","proof","main_js","handleError","f","apply","arguments","e","__wbindgen_exn_store","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbindgen_is_null","__wbindgen_is_undefined","__wbindgen_json_serialize","JSON","stringify","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","__wbindgen_json_parse","parse","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_free","__wbg_call_646f9f3c6af62d21","arg2","arg3","call","__wbindgen_string_get","__wbindgen_throw","__wbindgen_rethrow"],"mappings":"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","sourcesContent":["import * as wasm from './index_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} source\n* @param {any} location\n* @param {Function} resolve_callback\n* @returns {any}\n*/\nexport function compile(source, location, resolve_callback) {\n    try {\n        var ret = wasm.compile(addHeapObject(source), addHeapObject(location), addBorrowedObject(resolve_callback));\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {any} artifacts\n* @param {any} args\n* @returns {any}\n*/\nexport function compute_witness(artifacts, args) {\n    var ret = wasm.compute_witness(addHeapObject(artifacts), addHeapObject(args));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} program\n* @returns {any}\n*/\nexport function setup(program) {\n    var ret = wasm.setup(addHeapObject(program));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} vk\n* @param {any} abi_version\n* @returns {any}\n*/\nexport function export_solidity_verifier(vk, abi_version) {\n    var ret = wasm.export_solidity_verifier(addHeapObject(vk), addHeapObject(abi_version));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} program\n* @param {any} witness\n* @param {any} pk\n* @returns {any}\n*/\nexport function generate_proof(program, witness, pk) {\n    var ret = wasm.generate_proof(addHeapObject(program), addHeapObject(witness), addHeapObject(pk));\n    return takeObject(ret);\n}\n\n/**\n* @param {any} vk\n* @param {any} proof\n* @returns {any}\n*/\nexport function verify(vk, proof) {\n    var ret = wasm.verify(addHeapObject(vk), addHeapObject(proof));\n    return takeObject(ret);\n}\n\n/**\n*/\nexport function main_js() {\n    wasm.main_js();\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_is_null = function(arg0) {\n    var ret = getObject(arg0) === null;\n    return ret;\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbg_call_646f9f3c6af62d21 = handleError(function(arg0, arg1, arg2, arg3) {\n    var ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));\n    return addHeapObject(ret);\n});\n\nexport const __wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n"]},"metadata":{},"sourceType":"module"}