{"ast":null,"code":"import HASH from '../codes/hash';\nimport { initialize } from 'zokrates-js';\n\nconst voting = async (toHash, setter, results) => {\n  const formatter = w => JSON.parse(w).map(x => '0x' + x.toString(16).padStart(8, \"0\"));\n\n  const hasher = await import('witness');\n  setter(1);\n  const to_witness = hasher.genHash(toHash);\n  setter(2);\n  const to_pub = hasher.genId(toHash);\n  setter(3);\n  console.log(JSON.parse(to_witness));\n  const format_witness = formatter(to_witness);\n  const format_pub = formatter(to_pub);\n  console.log(format_witness);\n  results(`witness: ${format_witness}, public: ${format_pub}`);\n};\n\nexport default voting;","map":{"version":3,"sources":["/home/matias/Memoria/Demo/front-zk/app/src/utils/voting.js"],"names":["HASH","initialize","voting","toHash","setter","results","formatter","w","JSON","parse","map","x","toString","padStart","hasher","to_witness","genHash","to_pub","genId","console","log","format_witness","format_pub"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AACA,MAAMC,MAAM,GAAG,OAAOC,MAAP,EAAeC,MAAf,EAAuBC,OAAvB,KAAmC;AAC9C,QAAMC,SAAS,GAAGC,CAAC,IAAIC,IAAI,CAACC,KAAL,CAAWF,CAAX,EAAcG,GAAd,CAAmBC,CAAD,IAAM,OAAMA,CAAC,CAACC,QAAF,CAAW,EAAX,EAAeC,QAAf,CAAwB,CAAxB,EAA0B,GAA1B,CAA9B,CAAvB;;AACA,QAAMC,MAAM,GAAG,MAAM,OAAO,SAAP,CAArB;AACAV,EAAAA,MAAM,CAAC,CAAD,CAAN;AACA,QAAMW,UAAU,GAAGD,MAAM,CAACE,OAAP,CAAeb,MAAf,CAAnB;AACAC,EAAAA,MAAM,CAAC,CAAD,CAAN;AACA,QAAMa,MAAM,GAAGH,MAAM,CAACI,KAAP,CAAaf,MAAb,CAAf;AACAC,EAAAA,MAAM,CAAC,CAAD,CAAN;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACC,KAAL,CAAWM,UAAX,CAAZ;AACA,QAAMM,cAAc,GAAGf,SAAS,CAACS,UAAD,CAAhC;AACA,QAAMO,UAAU,GAAGhB,SAAS,CAACW,MAAD,CAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACAhB,EAAAA,OAAO,CAAE,YAAWgB,cAAe,aAAYC,UAAW,EAAnD,CAAP;AACH,CAbD;;AAeA,eAAepB,MAAf","sourcesContent":["import HASH from '../codes/hash';\nimport { initialize } from 'zokrates-js';\nconst voting = async (toHash, setter, results) => {\n    const formatter = w => JSON.parse(w).map((x) =>'0x'+ x.toString(16).padStart(8,\"0\"));\n    const hasher = await import('witness');\n    setter(1);\n    const to_witness = hasher.genHash(toHash);\n    setter(2);\n    const to_pub = hasher.genId(toHash);\n    setter(3);\n    console.log(JSON.parse(to_witness));\n    const format_witness = formatter(to_witness);\n    const format_pub = formatter(to_pub);\n    console.log(format_witness);\n    results(`witness: ${format_witness}, public: ${format_pub}`);\n}\n\nexport default voting;\n"]},"metadata":{},"sourceType":"module"}