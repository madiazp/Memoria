{"ast":null,"code":"var _jsxFileName = \"/home/matias/Memoria/Demo/front-zk/app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { initialize } from 'zokrates-js';\nimport HASH from './codes/hash';\n\nconst App = () => {\n  const [toHash, setToHash] = useState(\"\"); // load the zokrates compiled function file (out) needed for the proof generation\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Insert secret\")), /*#__PURE__*/React.createElement(\"input\", {\n    value: toHash,\n    onChange: evt => setToHash(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: async () => {\n      const hasher = await import('witness');\n      const to_witness = hasher.genHash(toHash);\n      console.log(JSON.parse(to_witness));\n      const zok = await initialize();\n      const artifacts = await zok.compile(HASH);\n      const {\n        witness,\n        output\n      } = zok.computeWitness(artifacts, [JSON.parse(to_witness)]);\n      console.log(witness);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Calcular\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/matias/Memoria/Demo/front-zk/app/src/App.js"],"names":["React","useState","initialize","HASH","App","toHash","setToHash","evt","target","value","hasher","to_witness","genHash","console","log","JSON","parse","zok","artifacts","compile","witness","output","computeWitness"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAkB,cAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CADgB,CAEhB;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CADJ,eAMI;AAAO,IAAA,KAAK,EAAEI,MAAd;AAAsB,IAAA,QAAQ,EAAEE,GAAG,IAAID,SAAS,CAACC,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOE;AAAQ,IAAA,OAAO,EAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAM,OAAO,SAAP,CAArB;AACA,YAAMC,UAAU,GAAGD,MAAM,CAACE,OAAP,CAAeP,MAAf,CAAnB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAZ;AACA,YAAMM,GAAG,GAAG,MAAMf,UAAU,EAA5B;AACA,YAAMgB,SAAS,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAYhB,IAAZ,CAAxB;AACA,YAAM;AAAEiB,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAqBJ,GAAG,CAACK,cAAJ,CAAmBJ,SAAnB,EAA8B,CAACH,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAD,CAA9B,CAA3B;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACF,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF;AAwBD,CA3BD;;AA4BA,eAAehB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { initialize } from 'zokrates-js';\nimport HASH  from './codes/hash';\n\nconst App = () => {\n  const [toHash, setToHash] = useState(\"\");\n  // load the zokrates compiled function file (out) needed for the proof generation\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <div>\n          <p>\n          Insert secret\n          </p>\n          </div>\n          <input value={toHash} onChange={evt => setToHash(evt.target.value)} />\n        <button onClick={ async () => {\n            const hasher = await import('witness');\n            const to_witness = hasher.genHash(toHash);\n            console.log(JSON.parse(to_witness));\n            const zok = await initialize();\n            const artifacts = await zok.compile(HASH);\n            const { witness, output} = zok.computeWitness(artifacts, [JSON.parse(to_witness)]);\n           console.log(witness);\n        }\n        }>\n        Calcular\n         </button>\n      </header>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}