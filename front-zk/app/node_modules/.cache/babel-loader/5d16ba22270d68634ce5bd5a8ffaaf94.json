{"ast":null,"code":"var _jsxFileName = \"/home/matias/Memoria/Demo/front-zk/app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport genId from './utils/genId';\n\nconst App = () => {\n  const [toHash, setToHash] = useState(\"\");\n  const [result, setResult] = useState(\"\"); // load the zokrates compiled function file (out) needed for the proof generation\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Insert secret\")), /*#__PURE__*/React.createElement(\"input\", {\n    value: toHash,\n    onChange: evt => setToHash(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: async () => {\n      const outHash = await genId(toHash);\n      setResult(outHash);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Calcular\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, result))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/matias/Memoria/Demo/front-zk/app/src/App.js"],"names":["React","useState","genId","App","toHash","setToHash","result","setResult","evt","target","value","outHash"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CAFgB,CAGhB;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CADJ,eAMI;AAAO,IAAA,KAAK,EAAEG,MAAd;AAAsB,IAAA,QAAQ,EAAEI,GAAG,IAAIH,SAAS,CAACG,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOE;AAAQ,IAAA,OAAO,EAAG,YAAY;AAC1B,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACE,MAAD,CAA3B;AACAG,MAAAA,SAAS,CAACI,OAAD,CAAT;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,MADD,CADA,CAdA,CADF,CADF;AAwBD,CA5BD;;AA6BA,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport genId from './utils/genId';\n\nconst App = () => {\n  const [toHash, setToHash] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  // load the zokrates compiled function file (out) needed for the proof generation\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <div>\n          <p>\n          Insert secret\n          </p>\n          </div>\n          <input value={toHash} onChange={evt => setToHash(evt.target.value)} />\n        <button onClick={ async () => {\n            const outHash = await genId(toHash);\n            setResult(outHash);\n        }\n        }>\n        Calcular\n         </button>\n      <div>\n      <p>\n      {result}\n      </p>\n      </div>\n      </header>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}