{"ast":null,"code":"import { initialize } from 'zokrates-js';\nimport HASH from '../codes/hash';\n\nconst genId = async toHash => {\n  const hasher = await import('witness');\n  const to_witness = hasher.genHash(toHash);\n  console.log(JSON.parse(to_witness));\n  const format_witness = JSON.parse(to_witness).map(x => '0x' + x.toString(16));\n  console.log(format_witness);\n  const zok = await initialize();\n  const artifacts = zok.compile(HASH);\n  const {\n    output\n  } = zok.computeWitness(artifacts, [format_witness]);\n  return output;\n};\n\nexport default genId;","map":{"version":3,"sources":["/home/matias/Memoria/Demo/front-zk/app/src/utils/genId.js"],"names":["initialize","HASH","genId","toHash","hasher","to_witness","genHash","console","log","JSON","parse","format_witness","map","x","toString","zok","artifacts","compile","output","computeWitness"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAkB,eAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAOC,MAAP,IAAkB;AAC5B,QAAMC,MAAM,GAAG,MAAM,OAAO,SAAP,CAArB;AACA,QAAMC,UAAU,GAAGD,MAAM,CAACE,OAAP,CAAeH,MAAf,CAAnB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAZ;AACA,QAAMM,cAAc,GAAGF,IAAI,CAACC,KAAL,CAAWL,UAAX,EAAuBO,GAAvB,CAA4BC,CAAD,IAAM,OAAMA,CAAC,CAACC,QAAF,CAAW,EAAX,CAAvC,CAAvB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AACA,QAAMI,GAAG,GAAG,MAAMf,UAAU,EAA5B;AACA,QAAMgB,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAYhB,IAAZ,CAAlB;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAYH,GAAG,CAACI,cAAJ,CAAmBH,SAAnB,EAA8B,CAACL,cAAD,CAA9B,CAAlB;AACA,SAAOO,MAAP;AACH,CAVD;;AAYA,eAAehB,KAAf","sourcesContent":["import { initialize } from 'zokrates-js';\nimport HASH  from '../codes/hash';\n\nconst genId = async (toHash) => {\n    const hasher = await import('witness');\n    const to_witness = hasher.genHash(toHash);\n    console.log(JSON.parse(to_witness));\n    const format_witness = JSON.parse(to_witness).map((x) =>'0x'+ x.toString(16))\n    console.log(format_witness);\n    const zok = await initialize();\n    const artifacts = zok.compile(HASH);\n    const { output} = zok.computeWitness(artifacts, [format_witness]);\n    return output\n}\n\nexport default genId;\n"]},"metadata":{},"sourceType":"module"}