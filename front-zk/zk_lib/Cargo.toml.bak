[package]
name = "zk_lib"
version = "0.1.0"
authors = ["italo <icarrasco@jumpitt.com>"]
edition = "2018"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib"]
[dependencies]
console_error_panic_hook = "0.1.6"
wasm-bindgen = { version = "0.2.58", features = ["serde-serialize"] }
regex = "0.2"
serde = { version = "^1.0.59", features = ["derive"] }
serde_json = "1.0"
serde_bytes = "0.11"
zokrates_core = { git = "https://github.com/Zokrates/ZoKrates", tag = "0.5.2", features = ["wasm"] }
zokrates_field = { git = "https://github.com/Zokrates/ZoKrates", tag = "0.5.2" }
zokrates_abi = { git = "https://github.com/Zokrates/ZoKrates", tag = "0.5.2" }
zokrates_fs_resolver = { git = "https://github.com/Zokrates/ZoKrates", tag = "0.5.2" }
bincode = "1.1.4"

[package.metadata.wasm-pack.profile.dev]
# Should `wasm-opt` be used to further optimize the wasm binary generated after
# the Rust compiler has finished? Using `wasm-opt` can often further decrease
# binary size or do clever tricks that haven't made their way into LLVM yet.
#
# Configuration is set to `false` by default for the dev profile, but it can
# be set to an array of strings which are explicit arguments to pass to
# `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# would execute very expensive optimizations passes
wasm-opt = true
[package.metadata.wasm-pack.profile.debug]
wasm-opt = false
